buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.codurance'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	// implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation('org.flywaydb:flyway-core')
	runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

configurations {
	acceptanceCompile.extendsFrom testCompile
	acceptanceRuntime.extendsFrom testRuntime
}

sourceSets {
	acceptance {
		java.srcDir file("src/acceptance/java")
		resources.srcDir     file("src/acceptance/resources")
		compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.acceptanceCompile
		runtimeClasspath = output + compileClasspath + configurations.acceptanceRuntime
	}
}

task acceptanceTest(type: Test) {
	testClassesDirs = sourceSets.acceptance.output.classesDirs
	classpath = sourceSets.acceptance.runtimeClasspath
}

check.dependsOn acceptanceTest